-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA256

"""
ENSURE THIS IS AN OFFICIAL CODE
Use our PGP public key (you should never update this once saved)
http://l3n6v6dm63frml22tlmzacnasvp7co7wylu4hhcs34ukxe7q56yb4tyd.onion/static/public

step 1:
review code

step 2:
install python 3.x

step 3:
pip3 install cryptography colorama
"""

# Importing needed modules
import tkinter  # used for basic gui
from tkinter import filedialog  # used to ask for file
from getpass import getpass  # used to get password
from colorama import init, Fore  # used for terminal colours
from cryptography.fernet import Fernet  # local fernet crypto
from sys import exit as sysExit  # used to kill script


init()

ROOT = tkinter.Tk()
ROOT.withdraw()

CURRENT_VERSION = "0.0.1"

SITE = "http://l3n6v6dm63frml22tlmzacnasvp7co7wylu4hhcs34ukxe7q56yb4tyd.onion/{page}"

print("\n" * 350)

print(
    Fore.LIGHTBLUE_EX,
    r"""
             _        __ _ _
            (_)      / _(_) |
  _ __  _ __ ___   _| |_ _| | ___  ___
 | '_ \| '__| \ \ / /  _| | |/ _ \/ __|
 | |_) | |  | |\ V /| | | | |  __/\__ \
 | .__/|_|  |_| \_/ |_| |_|_|\___||___/
 | |
 |_|
    """,
    Fore.RESET
)
print(SITE.format(page=""), "\n")
print(f"truly private file sharing\nversion: {Fore.GREEN}{CURRENT_VERSION}{Fore.RESET}\n\n")


print("Please select the file")
file_path = filedialog.askopenfilename()
if not file_path:
    sysExit(Fore.RED + "No file select")

fernet_key = getpass("local key: ")
try:
    fer = Fernet(fernet_key.encode())
except Exception:
    sysExit(Fore.RED + "Invalid fernet key")


with open(file_path, "rb") as read_:
    try:
        dencrypted_contents = fer.decrypt(read_.read())
    except Exception:
        sysExit(Fore.RED + "Invalid fernet key")

with open(file_path, "wb") as write_:
    write_.write(dencrypted_contents)

print(Fore.GREEN + "File has been dencrypted!", Fore.RESET)
-----BEGIN PGP SIGNATURE-----

iQIzBAEBCAAdFiEEDdup6GORm839wr0TnuH2yfyrvsUFAmFVrvAACgkQnuH2yfyr
vsWLbw//Y5truxhCcKAnmnf0RfEVRhw3siDz2lM6nsWh4wQXxy/bdFX55M3e1hiO
1GKdgRVJ6OszM1eAed+yOuiyEG2LZ2upanveeEIkqGUYL4MrqdMOiUwLmFKNxGZc
bSzM9F8w0+FoXEk/IHWG12gwBbDbJNEmYyHaOJUQEFer7sopt7CqV5wqusdKelkx
DSpgZhXkN3+wxpqGLykiPuhRdjcqABvHKYdhzyVsSk2+b20ZNhExXmLYK9bCN24O
XGTx1ZvUMN43Z34pYjJS75jd104Wb43bMjlFtXgCSYBJGW3IU/HSAS0+o0iev4/V
8E6XnfSpThC9htOjcrBmVbMa297T+e/nxr5++BAgEtqJp3KWjd3pIZuChpZOggvW
HXhUJDR5bbAwyfcF0gAMp9YWjLpZRC2OvYN0olk8w/jQfv7X5xKOWQnhtRQmKs/b
7BXOLHFmxhyvbBiGZDCH3trWMT6ROLYbT/inaVXEB5Kn+eKVQgOMsRO9V2hMvnzm
KXhGiCnn9ABc4lLJg/kbigjciEFABW3wRTa9KJtqqCSjs5v00sBXiQAJ0HcPViX8
oZQVUGyj9TpQLdUPo2JInmJrurGSEs08xmJUQPXUbWAhk7o69V14XiCU5BVXmFHz
Kol5QZzv6Kjrp0ym1CJAEkHTdtoKJptTmrWDKJ2KFngkcS26wLE=
=wAP4
-----END PGP SIGNATURE-----
